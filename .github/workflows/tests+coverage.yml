name: tests+coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  min_coverage: 100.0
  cov_parts_artifact: .cov
  cov_json_path: .github/stats/coverage.latest.json

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[format]
        black --version
    - name: Show format diff with black
      if: github.event_name == 'pull_request'
      run: |
        black --diff --color --verbose .
    - name: Format with black
      if: github.event_name == 'push'
      run: |
        black --verbose .
    - name: Push formatting changes
      if: github.event_name == 'push'
      run: |
        git config user.name 'GitHub CI'
        git config user.email ''
        git add --all
        if git commit -m "(CI:) Auto-format with black from workflow ${{github.workflow}} (run ${{github.run_id}})."
        then git push
        fi
  tests:
    needs: format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[tests]
        pip install .[coverage]
    - name: Tests and coverage
      run: |
        coverage erase
        coverage run --parallel-mode --branch --source=nx_config --omit=**/__init__.py -m unittest discover -v -s tests/
    - name: Upload coverage data
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.cov_parts_artifact}}
        path: .coverage.*
        retention-days: 1
  combined_coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download coverage for individual python versions
      uses: actions/download-artifact@v2
      id: dl_cov_parts
      with:
        name: ${{env.cov_parts_artifact}}
        path: .cov_parts
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Combine coverage
      run: |
        python -m pip install --upgrade pip
        pip install .[coverage]
        coverage combine ${{steps.dl_cov_parts.outputs.download-path}}
    - name: Report coverage
      run: |
        coverage report --show-missing --precision=1 --fail-under=${{env.min_coverage}}
    - name: Write coverage JSON
      if: ${{github.event_name == 'push' && always()}}
      run: |
        coverage json -o ${{env.cov_json_path}}
        python .github/stats/cov_add_rounded_total.py ${{env.cov_json_path}}
    - name: Push changes to stats file
      if: ${{github.event_name == 'push' && always()}}
      run: |
        git config user.name 'GitHub CI'
        git config user.email ''
        git add ${{env.cov_json_path}}
        git commit -m "(CI:) Update coverage JSON from workflow ${{github.workflow}} (run ${{github.run_id}})."
        git push
